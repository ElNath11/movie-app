{"ast":null,"code":"import { SEARCH_MOVIE, GET_MOVIES, GET_MOVIE, LOADING } from './types';\nimport axios from 'axios';\nimport { APIKeyOwn } from '../APIKey';\nexport const searchMovie = text => dispatch => {\n  dispatch({\n    type: SEARCH_MOVIE,\n    payload: text\n  });\n};\nexport const getMovies = text => dispatch => {\n  axios.get(`https://www.omdbapi.com/?apikey=${APIKeyOwn}&s=${text}`).then(response => dispatch({\n    type: GET_MOVIES,\n    payload: response.data.Search\n  })).catch(err => console.log(err));\n};\nexport const getOmdb = params => dispatch => {\n  axios.get(`https://www.omdbapi.com`).then(response => dispatch({\n    type: GET_MOVIES,\n    payload: response.data.Search\n  })).catch(err => console.log(err));\n};\nexport const getMovie = id => dispatch => {\n  axios.get(`https://www.omdbapi.com/?apikey=${APIKeyOwn}&i=${id}`).then(response => dispatch({\n    type: GET_MOVIE,\n    payload: response.data\n  })).catch(err => console.log(err));\n};\nexport const setLoading = () => {\n  return {\n    type: LOADING\n  };\n};","map":{"version":3,"sources":["/Users/mymac/Projects/movie-app/dev/src/actions/searchActions.js"],"names":["SEARCH_MOVIE","GET_MOVIES","GET_MOVIE","LOADING","axios","APIKeyOwn","searchMovie","text","dispatch","type","payload","getMovies","get","then","response","data","Search","catch","err","console","log","getOmdb","params","getMovie","id","setLoading"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,UAAtB,EAAkCC,SAAlC,EAA6CC,OAA7C,QAA2D,SAA3D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,SAAR,QAAwB,WAAxB;AAEA,OAAO,MAAMC,WAAW,GAAGC,IAAI,IAAIC,QAAQ,IAAI;AAC3CA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAET,YADD;AAELU,IAAAA,OAAO,EAAEH;AAFJ,GAAD,CAAR;AAIH,CALM;AAOP,OAAO,MAAMI,SAAS,GAAGJ,IAAI,IAAIC,QAAQ,IAAI;AACzCJ,EAAAA,KAAK,CACFQ,GADH,CACQ,mCAAkCP,SAAU,MAAKE,IAAK,EAD9D,EAEGM,IAFH,CAEQC,QAAQ,IACZN,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAER,UADC;AAEPS,IAAAA,OAAO,EAAEI,QAAQ,CAACC,IAAT,CAAcC;AAFhB,GAAD,CAHZ,EAQGC,KARH,CAQSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CARhB;AASD,CAVI;AAYL,OAAO,MAAMG,OAAO,GAAIC,MAAD,IAAYd,QAAQ,IAAI;AAC7CJ,EAAAA,KAAK,CACFQ,GADH,CACQ,yBADR,EAEGC,IAFH,CAEQC,QAAQ,IACZN,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAER,UADC;AAEPS,IAAAA,OAAO,EAAEI,QAAQ,CAACC,IAAT,CAAcC;AAFhB,GAAD,CAHZ,EAQGC,KARH,CAQSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CARhB;AASD,CAVM;AAYP,OAAO,MAAMK,QAAQ,GAAGC,EAAE,IAAIhB,QAAQ,IAAI;AACxCJ,EAAAA,KAAK,CACFQ,GADH,CACQ,mCAAkCP,SAAU,MAAKmB,EAAG,EAD5D,EAEGX,IAFH,CAEQC,QAAQ,IACZN,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEP,SADC;AAEPQ,IAAAA,OAAO,EAAEI,QAAQ,CAACC;AAFX,GAAD,CAHZ,EAQGE,KARH,CAQSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CARhB;AASD,CAVM;AAYP,OAAO,MAAMO,UAAU,GAAG,MAAM;AAC/B,SAAO;AACLhB,IAAAA,IAAI,EAAEN;AADD,GAAP;AAGA,CAJM","sourcesContent":["import {SEARCH_MOVIE, GET_MOVIES, GET_MOVIE, LOADING} from './types';\nimport axios from 'axios';\n\nimport {APIKeyOwn} from '../APIKey';\n\nexport const searchMovie = text => dispatch => {\n    dispatch({\n        type: SEARCH_MOVIE,\n        payload: text\n    });\n};\n\nexport const getMovies = text => dispatch => {\n    axios\n      .get(`https://www.omdbapi.com/?apikey=${APIKeyOwn}&s=${text}`)\n      .then(response =>\n        dispatch({\n          type: GET_MOVIES,\n          payload: response.data.Search\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  export const getOmdb = (params) => dispatch => {\n    axios\n      .get(`https://www.omdbapi.com`)\n      .then(response =>\n        dispatch({\n          type: GET_MOVIES,\n          payload: response.data.Search\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  export const getMovie = id => dispatch => {\n    axios\n      .get(`https://www.omdbapi.com/?apikey=${APIKeyOwn}&i=${id}`)\n      .then(response =>\n        dispatch({\n          type: GET_MOVIE,\n          payload: response.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  export const setLoading = () => {\n   return {\n     type: LOADING\n   }\n  };"]},"metadata":{},"sourceType":"module"}