{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/Projects/movie-app/dev/src/components/home/SearchInput.js\";\nimport React, { Component } from 'react';\nimport { searchMovie, getMovies, setLoading, getOmdb } from '../../actions/searchActions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class SearchInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.props.searchMovie(e.target.value);\n    };\n\n    this.onSubmit = e => {\n      const {\n        page\n      } = this.state;\n      e.preventDefault(); // this.props.getMovies(this.props.text);\n\n      const GetMov = this.props.getOmdb({\n        s: this.props.text,\n        p: page\n      }); // debugger;\n\n      this.props.setLoading();\n    };\n\n    this.state = {\n      page: 2\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" jumbotron-fluid mt-5 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"searchForm\",\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"searchText\",\n            placeholder: \"What are you searching for ...\",\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"bbtn btn-primary btn-lg btn-block mt-3\",\n            style: {\n              cursor: 'pointer'\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  text: state.movies.text\n});\n\nexport default connect(mapStateToProps, {\n  searchMovie,\n  getMovies,\n  setLoading,\n  getOmdb\n})(SearchInput);","map":{"version":3,"sources":["/Users/mymac/Projects/movie-app/dev/src/components/home/SearchInput.js"],"names":["React","Component","searchMovie","getMovies","setLoading","getOmdb","connect","SearchInput","constructor","props","onChange","e","target","value","onSubmit","page","state","preventDefault","GetMov","s","text","p","render","cursor","mapStateToProps","movies"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,WAAR,EAAqBC,SAArB,EAAgCC,UAAhC,EAA4CC,OAA5C,QAA2D,6BAA3D;AACA,SAASC,OAAT,QAAuB,aAAvB;;AAEA,OAAO,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AACvCO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAOlBC,QAPkB,GAOPC,CAAC,IAAI;AACZ,WAAKF,KAAL,CAAWP,WAAX,CAAuBS,CAAC,CAACC,MAAF,CAASC,KAAhC;AACH,KATiB;;AAAA,SAWlBC,QAXkB,GAWPH,CAAC,IAAI;AACZ,YAAM;AAAEI,QAAAA;AAAF,UAAW,KAAKC,KAAtB;AACAL,MAAAA,CAAC,CAACM,cAAF,GAFY,CAGZ;;AACA,YAAMC,MAAM,GAAG,KAAKT,KAAL,CAAWJ,OAAX,CAAmB;AAC9Bc,QAAAA,CAAC,EAAE,KAAKV,KAAL,CAAWW,IADgB;AAE9BC,QAAAA,CAAC,EAAEN;AAF2B,OAAnB,CAAf,CAJY,CAQZ;;AACA,WAAKN,KAAL,CAAWL,UAAX;AACH,KArBiB;;AAEV,SAAKY,KAAL,GAAa;AACTD,MAAAA,IAAI,EAAE;AADG,KAAb;AAGP;;AAkBDO,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACA;AAAM,UAAA,EAAE,EAAC,YAAT;AACI,UAAA,QAAQ,EAAE,KAAKR,QADnB;AAAA,kCAGI;AACA,YAAA,IAAI,EAAC,MADL;AAEA,YAAA,SAAS,EAAC,cAFV;AAGA,YAAA,IAAI,EAAC,YAHL;AAIA,YAAA,WAAW,EAAC,gCAJZ;AAKA,YAAA,QAAQ,EAAE,KAAKJ;AALf;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAUI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,wCAAhC;AAAyE,YAAA,KAAK,EAAE;AAAEa,cAAAA,MAAM,EAAE;AAAV,aAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoBH;;AA7CsC;;AAgD3C,MAAMC,eAAe,GAAGR,KAAK,KAAK;AAC9BI,EAAAA,IAAI,EAAEJ,KAAK,CAACS,MAAN,CAAaL;AADW,CAAL,CAA7B;;AAIA,eAAed,OAAO,CAClBkB,eADkB,EAElB;AAACtB,EAAAA,WAAD;AAAcC,EAAAA,SAAd;AAAyBC,EAAAA,UAAzB;AAAqCC,EAAAA;AAArC,CAFkB,CAAP,CAGdE,WAHc,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {searchMovie, getMovies, setLoading, getOmdb } from '../../actions/searchActions'\nimport  {connect} from 'react-redux' \n\nexport class SearchInput extends Component {\n    constructor(props){\n        super(props);\n            this.state = {\n                page: 2,\n        }\n    }\n\n    onChange = e => {\n        this.props.searchMovie(e.target.value);\n    }\n\n    onSubmit = e => {\n        const { page } = this.state;\n        e.preventDefault();\n        // this.props.getMovies(this.props.text);\n        const GetMov = this.props.getOmdb({\n            s: this.props.text,\n            p: page,\n        });\n        // debugger;\n        this.props.setLoading();\n    }\n\n    render() {\n        return (\n            <div className=\" jumbotron-fluid mt-5 text-center\">\n            <div className=\"container\">\n            <form id=\"searchForm\"\n                onSubmit={this.onSubmit}\n            >\n                <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"searchText\"\n                placeholder=\"What are you searching for ...\"\n                onChange={this.onChange}\n                />\n                <button type=\"submit\" className=\"bbtn btn-primary btn-lg btn-block mt-3\" style={{ cursor: 'pointer' }}>\n                Search\n                </button>\n            </form>\n            </div>\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    text: state.movies.text\n  });\n\nexport default connect(\n    mapStateToProps,\n    {searchMovie, getMovies, setLoading, getOmdb})\n(SearchInput);"]},"metadata":{},"sourceType":"module"}